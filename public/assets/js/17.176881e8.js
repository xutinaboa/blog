(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{517:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"结构化通信模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构化通信模型"}},[t._v("#")]),t._v(" 结构化通信模型")]),t._v(" "),a("p",[t._v("分布在页面上的组件是树状结构，权当把它看成一棵树来抽象理解它们之间的通信。树的父节点到子节点之间的通信有多种，但常用的莫过于props，它是单项数据流，意味着子节点无法通过props向父节点通信，这里可以从结构上解释下为什么无法实现双向绑定的props，因为子节点可以变更父节点，而子节点的基础是建立在父节点上，另外，父子节点之间是一对多关系，无法确定数据变更源。vue特别的加入了"),a("code",[t._v("update:myPropName")]),t._v(" 的模式触发事件来实现子节点向父节点通信，但这是事件而非props。带有原生事件的表单组件，利用value属性和对应的事件（input、change等）轻而易举的实现双向绑定。另一种实现通信的方式获取节点实例，通过实例上的搭载的数据获取到有用的信息，在子节点上获取父节点的实例即可拿到父实例上的数据实现通信，同理，在父节点上获取子节点的实例数组即可拿到子实例上的数据实现子传父的通信。")]),t._v(" "),a("p",[t._v("父子节点链可以实现跨级之间的通信，但这样需要确保链的正确性，而且多级之间获取实例导致代码冗杂。Vue提供了provide / inject模式实现更好的跨级通信因为不向节点链在意层级数，用法也很简单，父节点的provide的参数会在所有inject子孙及其后代组件上获取到，其缺点是仍然是单项数据流，无法实现从下往上的跨级通信。为了实现子节点向父节点的通信，只能借助基于eventBus的广播broadcast和派发dispatch机制，其实现思想很简单，递归往上找到父节点名，然后在父节点上触发emit，同理广播是递归往下查找，摘自element-ui的dispatch源码如下：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("componentName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" componentName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("eventName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("在树状结构来看同一父节点下的兄弟节点的通信，莫过于让父节点实例作为媒介（当然也可以使用eventBus），但对于非同一父节点非同一层级下的两个节点的通信通过节点链唯一的媒介就是根节点，然而如果通过高效树的遍历算法可以实现快速的查找，但这种方式不可避免的会产生状态多次更改无法溯源的情况。")]),t._v(" "),a("h2",{attrs:{id:"中心化状态管理-vuex架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中心化状态管理-vuex架构"}},[t._v("#")]),t._v(" 中心化状态管理——vuex架构")]),t._v(" "),a("p",[t._v("摘自vuex官网介绍的一句话：")]),t._v(" "),a("blockquote",[a("p",[t._v("我们为什么不把组件的共享状态抽取出来，以一个全局单例模式管理呢？在这种模式下，我们的组件树构成了一个巨大的“视图”，不管在树的哪个位置，任何组件都能获取状态或者触发行为！ 通过定义和隔离状态管理中的各种概念并通过强制规则维持视图和状态间的独立性，我们的代码将会变得更结构化且易维护。")])]),t._v(" "),a("p",[t._v("这句话给的思想很直接，脱离视图的树结构，将其共享的状态抽取出来，统一中心化管理，然后映射到视图的各个节点中。脱离树结构可以用全局变量（Vue上的静态属性），也可以使用Vue的原型，而Vuex正是采用后者。")]),t._v(" "),a("p",[t._v("Vuex提供通信并不是它存在的核心（用store模式也可以），它的核心是利用 Vue.js 的细粒度数据响应机制来进行高效的状态管理。Vuex借鉴了Flux的单项数据流的核心理念，也借鉴了Redux的共享状态脱离为单一数据源。Vuex的架构如下图:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://vuex.vuejs.org/vuex.png",alt:""}})]),t._v(" "),a("p",[t._v("用一个小例子来解释这个架构图，组件上的钩子、事件或者异步请求触发，触发中提交状态变更请求到变更栈，变更栈存在钩子以供外部的vue devtools捕捉到变更，然后将变更的状态推到状态池，状态池通过vue的响应式原理触发render，重新生成组件。")]),t._v(" "),a("p",[a("em",[t._v("结构化通信模型来源于vue官方文档")])]),t._v(" "),a("p",[a("em",[t._v("中心化状态管理——vuex架构来源于vuex官方文档")])]),t._v(" "),a("p",[t._v("2018年9月29日")])])}),[],!1,null,null,null);s.default=e.exports}}]);